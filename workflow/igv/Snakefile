rule igv_gtf_sort:
    input:
        gtf = config['gtf']
    threads: 1
    resources:
        mem_gb = 16
    output:
        gtf = config['igv']['gtf_sorted']
    shell:
        "igvtools sort -t {resources.tmpdir} {input.gtf} {output.gtf}"


rule igv_gtf_talon_sort:
    input:
        gtf = config['talon']['gtf']
    threads: 1
    resources:
        mem_gb = 16
    output:
        gtf = config['igv']['gtf_talon_sorted']
    shell:
        "igvtools sort -t {resources.tmpdir} {input.gtf} {output.gtf}"


rule igv_gtf_corrected_talon_sort:
    input:
        gtf = config['talon']['gtf_corrected']
    threads: 1
    resources:
        mem_gb = 16
    output:
        gtf = config['igv']['gtf_talon_corrected_sorted']
    shell:
        "igvtools sort -t {resources.tmpdir} {input.gtf} {output.gtf}"

rule igv_index_gtf:
    input:
        gtf = 'data/results/igv/{filename}.gtf'
    threads: 1
    resources:
        mem_gb = 16
    output:
        index = 'data/results/igv/{filename}.gtf.idx'
    shell:
        'igvtools index "{input.gtf}"'


rule igv_gtf_talon_sample:
    input:
        gtf = config['talon']['gtf'],
        abundance = config['talon']['abundance']
    params:
        cutoff = 5,
        talon_samples = (
            lambda wilcards: df_lr[df_lr['sample']
                                   == wilcards.sample]['hr'].tolist()
        )
    threads: 1
    resources:
        mem_gb = 16
    output:
        gtf = temp(config['igv']['gtf_talon_sample'].replace(
            '.gtf', '.unsorted.gtf'))
    script:
        "./subset_sample.py"


rule igv_gtf_talon_sample_sort:
    input:
        gtf = config['igv']['gtf_talon_sample'].replace(
            '.gtf', '.unsorted.gtf')
    threads: 1
    resources:
        mem_gb = 16
    output:
        gtf = config['igv']['gtf_talon_sample']
    shell:
        'igvtools sort -t {resources.tmpdir} "{input.gtf}" "{output.gtf}"'


rule igv_gtf_talon_corrected_sample:
    input:
        gtf = config['talon']['gtf_corrected'],
        abundance = config['talon']['abundance_corrected']
    params:
        cutoff = 5,
        talon_samples = (
            lambda wilcards: df_lr[df_lr['sample']
                                   == wilcards.sample]['hr'].tolist()
        )
    threads: 1
    resources:
        mem_gb = 16
    output:
        gtf = temp(config['igv']['gtf_talon_sample'].replace(
            '.gtf', '.unsorted.gtf'))
    script:
        "./subset_sample_corrected.py"


rule igv_gtf_talon_corrected_sample_sort:
    input:
        gtf = config['igv']['gtf_talon_sample'].replace(
            '.gtf', '.unsorted.gtf')
    threads: 1
    resources:
        mem_gb = 16
    output:
        gtf = config['igv']['gtf_talon_sample']
    shell:
        'igvtools sort -t {resources.tmpdir} "{input.gtf}" "{output.gtf}"'


rule igv_visualize:
    input:
        gtf = config['igv']['gtf_sorted'],
        gtf_talon_sorted = config['igv']['gtf_talon_sorted'],
        gtf_talon_corrected_sorted = config['igv']['gtf_talon_corrected_sorted'],

        gtf_index = config['igv']['gtf_sorted'] + '.idx',
        gtf_talon_sorted_index = config['igv']['gtf_talon_sorted'] + '.idx',
        gtf_talon_corrected_sorted_index = config['igv']['gtf_talon_corrected_sorted'] + '.idx'


rule all_igv:
    input:
        config['igv']['gtf_sorted'],
        config['igv']['gtf_sorted'] + '.idx',
        config['igv']['gtf_talon_sorted'],
        config['igv']['gtf_talon_sorted'] + '.idx'

        # rules.igv_gtf_corrected_talon_sort.output,
        # config['igv']['gtf_talon_corrected_sorted'] + '.idx'

        # expand(config['igv']['gtf_talon_sample'], sample=lr_samples),
        # expand(config['igv']['gtf_talon_sample'] + '.idx', sample=lr_samples)

        # rules.igv_visualize.input
