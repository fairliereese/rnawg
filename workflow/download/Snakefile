rule download_fasta_human:
    output:
        config['fasta'].format(specie='human')
    shell:
        "wget -O - https://www.encodeproject.org/files/GRCh38_no_alt_analysis_set_GCA_000001405.15/@@download/GRCh38_no_alt_analysis_set_GCA_000001405.15.fasta.gz | gunzip -c > {output}"


rule download_gtf_human:
    output:
        config['gtf_raw'].format(specie='human')
    shell:
        "wget -O - https://www.encodeproject.org/files/ENCFF991WIA/@@download/ENCFF991WIA.gtf.gz | gunzip -c > {output}"


rule download_chrom_sizes_human:
    output:
        config['chrom_sizes'].format(specie='human')
    shell:
        "wget https://www.encodeproject.org/files/ENCFF667IGK/@@download/ENCFF667IGK.tsv -O {output}"


# move to mouse repo
# rule download_fasta_mouse:
#     output:
#         config['wg_encode']['fasta'].format(specie='mouse')
#     shell:
#         "wget -O - https://www.encodeproject.org/files/mm10_no_alt_analysis_set_ENCODE/@@download/mm10_no_alt_analysis_set_ENCODE.fasta.gz | gunzip -c >  {output}"


# rule download_gtf_mouse:
#     output:
#         config['wg_encode']['gtf_raw'].format(specie='mouse')
#     shell:
#         "wget -O - https://www.encodeproject.org/files/gencode.vM21.primary_assembly.annotation_UCSC_names/@@download/gencode.vM21.primary_assembly.annotation_UCSC_names.gtf.gz | gunzip -c > {output}"


# rule download_chrom_sizes_mouse:
#     output:
#         config['wg_encode']['chrom_sizes'].format(specie='mouse')
#     shell:
#         "wget https://www.encodeproject.org/files/mm10_no_alt.chrom.sizes/@@download/mm10_no_alt.chrom.sizes.tsv -O {output}"


# rule download_wg_read_annot:
#     params:
#         drive_id = (lambda wildcards:
#                     config['drive_id'][wildcards.specie]['read_annot'])
#     output:
#         config['talon']['read_annot']
#     shell:
#         "gdown --id {params.drive_id} -O {output}"


# rule download_wg_gtf:
#     params:
#         drive_id = (lambda wildcards:
#                     config['drive_id'][wildcards.specie]['gtf'])
#     output:
#         config['talon']['gtf']
#     shell:
#         "gdown --id {params.drive_id} -O {output}"

# rule download_wg_abundance:
#     params:
#         drive_id = (lambda wildcards:
#                     config['drive_id'][wildcards.specie]['abundance'])
#     output:
#         config['talon']['abundance']
#     shell:
#         "gdown --id {params.drive_id} -O {output}"


rule download_cage:
    output:
        config['cage']['bed']
    shell:
        "wget https://www.encodeproject.org/files/{wildcards.encode_id}/@@download/{wildcards.encode_id}.bed.gz -O {output}"


rule download_cCREs_promotors:
    output:
        config['cCREs']['promotors']
    shell:
        "wget https://api.wenglab.org/screen_v13/fdownloads/cCREs/GRCh38-PLS.bed -O {output}"


rule download_cCREs_proximal_enhancers:
    output:
        config['cCREs']['proximal_enhancers']
    shell:
        "wget https://api.wenglab.org/screen_v13/fdownloads/GRCh38-ccREs.pELS.bed -O {output}"


rule download_cCREs_distal_enhancers:
    output:
        config['cCREs']['distal_enhancers']
    shell:
        "wget https://api.wenglab.org/screen_v13/fdownloads/GRCh38-ccREs.dELS.bed -O {output}"
