rule lapa_config:
    input:
        expand(config['lr']['bam'], encode_id=df_lr.index)
    params:
        df_lr = df_lr
    threads: 1
    resources:
        mem_gb = 4
    output:
        config = config['lapa']['config']
    script:
        "./lapa_config.py"

rule lapa:
    input:
        aligment = config['lapa']['config'],
        fasta = config['fasta'],
        gtf = config['gtf'],
        chrom_sizes = config['chrom_sizes']
    threads: 4
    resources:
        mem_gb = 32
    output:
        directory(config['lapa']['tes'])
    shell:
        "lapa \
        --alignment {input.aligment} \
        --fasta {input.fasta} \
        --annotation {input.gtf} \
        --chrom_sizes {input.chrom_sizes} \
        --output_dir {output}"


rule lapa_tss:
    input:
        aligment = config['lapa']['config'],
        fasta = config['fasta'],
        gtf = config['gtf'],
        chrom_sizes = config['chrom_sizes']
    threads: 4
    resources:
        mem_gb = 32
    output:
        directory(config['lapa']['tss'])
    shell:
        "lapa_tss \
        --alignment {input.aligment} \
        --fasta {input.fasta} \
        --annotation {input.gtf} \
        --chrom_sizes {input.chrom_sizes} \
        --output_dir {output}"


rule lapa_link_tss_to_tes:
    input:
        aligment = config['lr']['bam'],
        lapa_dir = config['lapa']['tes'],
        lapa_tss_dir = config['lapa']['tss']
    params:
        dataset = (lambda wld: df_lr.loc[wld['encode_id'],
                                         'Experiment accession'])
    threads: 1
    resources:
        mem_gb = 16
    output:
        config['lapa']['link_sample']
    shell:
        'lapa_link_tss_to_tes \
        --alignment {input.aligment} \
        --lapa_dir {input.lapa_dir} \
        --lapa_tss_dir {input.lapa_tss_dir} \
        --dataset "{params.dataset}" \
        --output {output}'


rule lapa_link_merge:
    input:
        dfs = expand(rules.lapa_link_tss_to_tes.output,
                     encode_id=df_lr.index)
    threads: 1
    resources:
        mem_gb = 32
    output:
        df = config['lapa']['link']
    script:
        "../common/merge_df.py"


rule lapa_correct_gtf:
    input:
        read_annot = config['talon']['read_annot'],
        links = config['lapa']['link'],
        gtf = config['talon']['gtf'],
        abundance = config['talon']['abundance']
    threads: 1
    resources:
        mem_gb = 128
    output:
        gtf = config['talon']['gtf_corrected'],
        abundance = config['talon']['abundance_corrected']
    shell:
        "lapa_correct_talon \
        --links {input.links} \
        --read_annot {input.read_annot} \
        --gtf_input {input.gtf} \
        --gtf_output {output.gtf} \
        --abundance_input {input.abundance} \
        --abundance_output {output.abundance} \
        --keep_unsupported"


rule replication_rate_tss:
    input:
        lapa_dir = config['lapa']['tss']
    params:
        df_lr = df_lr
    threads: 1
    resources:
        mem_gb = 32
    output:
        fig = 'reports/figures/replication_rate_tss.png'
    notebook:
        "./replication_rate.ipynb"


rule all_lapa:
    input:
        rules.lapa_correct_gtf.output
        # rules.lapa_link_merge.output
